name: Code Review

on:
  pull_request:
    types: [opened, synchronize]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  # 自動レビュー
  auto-review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20'
          
      # コードメトリクスの計算
      - name: Calculate code metrics
        id: metrics
        run: |
          # 変更行数を計算
          LINES_ADDED=$(git diff --numstat origin/${{ github.base_ref }}...${{ github.head_ref }} | awk '{ added += $1 } END { print added }')
          LINES_REMOVED=$(git diff --numstat origin/${{ github.base_ref }}...${{ github.head_ref }} | awk '{ removed += $2 } END { print removed }')
          FILES_CHANGED=$(git diff --name-only origin/${{ github.base_ref }}...${{ github.head_ref }} | wc -l)
          
          echo "lines_added=${LINES_ADDED}" >> $GITHUB_OUTPUT
          echo "lines_removed=${LINES_REMOVED}" >> $GITHUB_OUTPUT
          echo "files_changed=${FILES_CHANGED}" >> $GITHUB_OUTPUT
          
      # バンドルサイズの分析（Webアプリのみ）
      - name: Analyze bundle size
        if: contains(github.event.pull_request.labels.*.name, 'web')
        run: |
          cd web
          npm ci
          npm run build
          # バンドルサイズを記録
          find .next -name "*.js" -exec du -ch {} + | grep total$ > bundle-size.txt
          
      # Lighthouse CI（パフォーマンス測定）
      - name: Run Lighthouse CI
        if: contains(github.event.pull_request.labels.*.name, 'web')
        uses: treosh/lighthouse-ci-action@v11
        with:
          configPath: './lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true
        continue-on-error: true
        
      # PR コメントの作成
      - name: Comment PR with metrics
        uses: actions/github-script@v7
        with:
          script: |
            const metrics = {
              linesAdded: '${{ steps.metrics.outputs.lines_added }}',
              linesRemoved: '${{ steps.metrics.outputs.lines_removed }}',
              filesChanged: '${{ steps.metrics.outputs.files_changed }}'
            };
            
            let comment = `## 📊 Code Review Metrics
            
            ### 📈 Change Summary
            | Metric | Value |
            |--------|--------|
            | Lines Added | +${metrics.linesAdded} |
            | Lines Removed | -${metrics.linesRemoved} |
            | Files Changed | ${metrics.filesChanged} |
            `;
            
            // サイズによる警告
            if (parseInt(metrics.linesAdded) > 500) {
              comment += `
            ⚠️ **Large PR Alert**: This PR adds more than 500 lines. Consider breaking it into smaller PRs for easier review.`;
            }
            
            // チェックリスト
            comment += `
            
            ### ✅ Review Checklist
            - [ ] Code follows project style guidelines
            - [ ] Tests have been added/updated
            - [ ] Documentation has been updated
            - [ ] No sensitive data in code
            - [ ] Performance impact considered
            - [ ] Error handling implemented
            - [ ] Accessibility requirements met (Web)`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: comment
            });

  # 危険なパターンの検出
  security-patterns:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Check for dangerous patterns
        run: |
          # 危険なパターンをチェック
          echo "Checking for dangerous patterns..."
          
          # ハードコードされたシークレット
          if grep -r "sk-[a-zA-Z0-9]" --include="*.js" --include="*.ts" --include="*.tsx" --exclude-dir=node_modules .; then
            echo "::warning::Potential hardcoded API key found"
          fi
          
          # console.log の残存
          if grep -r "console\\.log" --include="*.js" --include="*.ts" --include="*.tsx" --exclude-dir=node_modules . | grep -v "// eslint-disable"; then
            echo "::warning::console.log statements found in code"
          fi
          
          # TODOコメント
          TODO_COUNT=$(grep -r "TODO\|FIXME\|HACK" --include="*.js" --include="*.ts" --include="*.tsx" --exclude-dir=node_modules . | wc -l)
          if [ "$TODO_COUNT" -gt 0 ]; then
            echo "::notice::Found $TODO_COUNT TODO/FIXME/HACK comments"
          fi

  # 依存関係の脆弱性チェック
  dependency-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate
          deny-licenses: GPL-3.0, AGPL-3.0
          
      - name: Check for outdated dependencies
        run: |
          npm install -g npm-check-updates
          echo "## Outdated Dependencies Report" > outdated.md
          echo "### Web App" >> outdated.md
          cd web && ncu >> ../outdated.md && cd ..
          echo "### Bot" >> outdated.md
          cd bot && ncu >> ../outdated.md && cd ..
          cat outdated.md
